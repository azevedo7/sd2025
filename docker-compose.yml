services:
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: oceanguest
      RABBITMQ_DEFAULT_PASS: oceanpass
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - ocean_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  server:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Server/Dockerfile
    ports:
      - "8080:8080"   # TCP listener port
      - "5001:5001"   # Web server port
    volumes:
      - server_data:/app/data
    networks:
      - ocean_network

  aggregator1:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Aggregator/Dockerfile
    environment:
      - AGGREGATOR_ID=humidity_agg
      - SENSOR_TYPES=humidity,waterLevel
      - AGGREGATOR_PORT=9000
      - SERVER_IP=server
      - SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=oceanguest
      - RABBITMQ_PASSWORD=oceanpass
    ports:
      - "9000:9000"
    volumes:
      - aggregator1_data:/app/data
    networks:
      - ocean_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started

  aggregator2:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Aggregator/Dockerfile
    environment:
      - AGGREGATOR_ID=temperature_agg
      - SENSOR_TYPES=temperature,windSpeed
      - AGGREGATOR_PORT=9001
      - SERVER_IP=server
      - SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=oceanguest
      - RABBITMQ_PASSWORD=oceanpass
    ports:
      - "9001:9001"
    volumes:
      - aggregator2_data:/app/data
    networks:
      - ocean_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started

  # Additional specialized aggregators for demonstration
  
  # Environmental monitoring aggregator - subscribes to all environmental sensors
  aggregator_environmental:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Aggregator/Dockerfile
    environment:
      - AGGREGATOR_ID=environmental_agg
      - SENSOR_TYPES=temperature,humidity,windSpeed,waterLevel  # All sensor types
      - AGGREGATOR_TYPE=environmental  # Specialized type for environmental monitoring
      - AGGREGATOR_PORT=9002
      - SERVER_IP=server
      - SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=oceanguest
      - RABBITMQ_PASSWORD=oceanpass
    ports:
      - "9002:9002"
    volumes:
      - aggregator_environmental_data:/app/data
    networks:
      - ocean_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started

  # Temperature-only monitoring aggregator
  aggregator_temp_only:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Aggregator/Dockerfile
    environment:
      - AGGREGATOR_ID=temp_only_agg
      - SENSOR_TYPES=temperature  # Only temperature sensors
      - AGGREGATOR_TYPE=temperature
      - AGGREGATOR_PORT=9003
      - SERVER_IP=server
      - SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=oceanguest
      - RABBITMQ_PASSWORD=oceanpass
    ports:
      - "9003:9003"
    volumes:
      - aggregator_temp_only_data:/app/data
    networks:
      - ocean_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started

  # Maintenance monitoring aggregator - for maintenance messages only
  aggregator_maintenance:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: Aggregator/Dockerfile
    environment:
      - AGGREGATOR_ID=maintenance_agg
      - SENSOR_TYPES=temperature,humidity,windSpeed,waterLevel  # All types for maintenance
      - AGGREGATOR_TYPE=maintenance  # Focus on maintenance messages
      - AGGREGATOR_PORT=9004
      - SERVER_IP=server
      - SERVER_PORT=8080
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=oceanguest
      - RABBITMQ_PASSWORD=oceanpass
    ports:
      - "9004:9004"
    volumes:
      - aggregator_maintenance_data:/app/data
    networks:
      - ocean_network
    depends_on:
      rabbitmq:
        condition: service_healthy
      server:
        condition: service_started

  python-analysis:
    build:
      context: ./OceanMonitoringSystem
      dockerfile: PythonAnalysisService/Dockerfile
    ports:
      - "50052:50052"
    networks:
      - ocean_network

  rpc-go-datatype:
    build:
      context: ./OceanMonitoringSystem/rpcGoDatatype
      dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - ocean_network
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "50051"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  ocean_network:
    driver: bridge

volumes:
  rabbitmq_data:
  server_data:
  aggregator1_data:
  aggregator2_data:
  web_control_data:
  aggregator_environmental_data:
  aggregator_temp_only_data:
  aggregator_maintenance_data: